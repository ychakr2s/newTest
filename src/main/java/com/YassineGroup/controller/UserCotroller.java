package com.YassineGroup.controller;

import com.YassineGroup.model.Fahrt;
import com.YassineGroup.model.User;
import com.YassineGroup.service.FahrtService;
import com.YassineGroup.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import java.util.HashSet;
import java.util.TreeSet;

//import org.springframework.data.jpa.repository.Query;

@Controller
public class UserCotroller {

    // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    @Autowired
    UserService userService;

    @Qualifier("fahrtService")
    @Autowired
    FahrtService fahrtService;

//    FahrtRepository fahrtRepository;
//    UserRepository userRepository;

    private int userId;

    public UserCotroller(UserService userService) {
        this.userService = userService;
    }

    @GetMapping("/")
    public String welcomeHome(Model model) {
        model.addAttribute("user", new User());
        return "index";
    }

    @GetMapping("/register")
    public String registerHome(Model model) {
        model.addAttribute("user", new User());
        return "registrieren";
    }

    @PostMapping("/register")
    public String formSubmit(@ModelAttribute("user") User user, Model modelAndView) {

        User existingUser = userService.findUserByEmail(user.getEmail());

        if (existingUser != null) {

            modelAndView.addAttribute("message", "This email already exists!");
            modelAndView.addAttribute("register");

            System.out.println("schon hier");
        } else {
            userService.saveUser(user);
            modelAndView.addAttribute("message", "Sie haben sich erfolgreich registriert");
            modelAndView.addAttribute("register");
        }

        System.out.println("Hello: " + user.getEmail());

        return "register";
    }

    @GetMapping("/loggin")
    public String loginHome(Model model) {
        model.addAttribute("user", new User());
        return "loggin";
    }


    @RequestMapping("/login-user")
    public String loginUser(@ModelAttribute User user, HttpServletRequest request, Model model) {
        model.addAttribute("loggin", new User());

        User existingUser = userService.findUserByUsernameAndPassword(user.getUsername(), user.getPassword());
//        System.out.println("FROM DATABASE " + user.getEmail() + " " + user.getPassword() + " " + user.getUsername() + " " + user.getId());

        if (existingUser != null) {
//            System.out.println("der id ist: " + userService.findUserIdByUsernameAndPassword(user.getUsername(), user.getPassword()));
//            System.out.println("das ist richtig " + userService.findUserById(1).getName());
            userId = existingUser.getId();
//            System.out.println("my Id " + userId);
            model.addAttribute("message", "Sie sind eingeloggt!");
            return "mainIndex";
        } else {
            model.addAttribute("message", "Invalid Username or Password! ");
//            System.out.println("Nein nLeider hejt nicht");
            return "error";
        }
    }
//
//    @GetMapping("/fahrtt")
//    public String testfahrt(Model model) {
//
//        User user = new User("name", "lastname", "username", "yassine@yahoo.de", "password");
//
//        Set<Fahrt> fahr = new HashSet<Fahrt>();
//
//// Create Comments
//        Fahrt fahrt = new Fahrt("fromt", "tot", "dateez", 25, "placte", user);
//
//        Fahrt fahrt1 = new Fahrt("from", "to", "datee", 25, "plact", user);
//        fahr.add(fahrt);
//        fahr.add(fahrt1);
//        user.setFahrt(fahr);
//        fahrt.setUser(user);
//
//        user.getFahrt().add(fahrt);
//
//        userService.saveUser(user);
//
//        return "test";
//    }

    @GetMapping("/showFahrt")
    public String showfahr(Model model, Fahrt fahrt) {
        model.addAttribute("fahrt", fahrt);
        return "fahrtHinzufuegen";
    }

//    @GetMapping("/addFahrt")
//    public String addFahr(@ModelAttribute User user, HttpServletRequest request, Model model) {
//        model.addAttribute("fahrt", new Fahrt());
//        return "fahrtHunzufuegen";
//    }

//    @PostMapping("/addFahrt")
//    public String addFahr(@ModelAttribute("fahrt") Fahrt fahrt, Model modelAndView) {
////        postRepository.findById(postId).map(post -> { comment.setPost(post); return commentRepository.save(comment);
//        User user = userRepository.findById(userId);
//        fahrt.setUser(user);
//        Set<Fahrt> fahr = new HashSet<Fahrt>();
//        fahr.add(fahrt);
////        fahr.
//        fahrtRepository.save(fahr);
//        user.setFahrt(fahr);
//
////        fahrt.getUser().setFahrt(fahr);
//        System.out.println("alles ist Richtig");
//
//        return "register";
//    }


    @PostMapping(value = "/createFahrt")
    public String createFahrt(@Valid @ModelAttribute("fahrt") Fahrt fahrt, BindingResult result, Model modelAndView) {
        User user = userService.findUserById(userId);
        fahrt.setUser(user);
        fahrtService.saveFahrt(fahrt);

        modelAndView.addAttribute("message", "Yeh.. you saved the Fahrt!!");
        modelAndView.addAttribute("register");

        return "mainIndex";
    }

    @GetMapping(value = "/display_Fahrt")
    public String displayFahrt(@ModelAttribute("fahrt") Fahrt fahrt, Model modelAndView) {
//        User user = userService.findUserById(userId);

        HashSet<Fahrt> fahrts = new HashSet<Fahrt>();
        fahrts = fahrtService.showUsersFahrts(userId);

        TreeSet myTreeSet = new TreeSet();
        myTreeSet.addAll(fahrts);

        modelAndView.addAttribute("fahrts", myTreeSet);
        return "mainIndex";
    }

    @GetMapping("/delete-fahrt/{id}")
    public String deleteFahrt(@PathVariable("id") int id) {

        fahrtService.deleteFahrt(id);
        return "redirect:/display_Fahrt";
    }

    @GetMapping("/edit-fahrt/{id}")
    public String editFahrt(@PathVariable("id") int id, Model model) {
        System.out.println("heyyy  guck mal ..... ich bin in edit : " + id);

        Fahrt fahrt = fahrtService.findFahrtById(id);
        model.addAttribute("fahrt", fahrt);
        return "updateFahrt";
    }

//    @GetMapping("/updateFormat/{id}")
//    public String updateFormat(@PathVariable("id") int id,Model model, @ModelAttribute Fahrt fahrt) {
//        System.out.println("ich binn drin in Update");
//        Fahrt fahrt1 = fahrtService.findFahrtById(id);
//        model.addAttribute("fahrt", fahrt1);
//        System.out.println("ich binn drin in Update");
//
//        return "update_fahrt";
//    }


    @PostMapping("/update/{id}")
    public String updateUser(@PathVariable("id") int id, @Valid Fahrt fahrt) {
        System.out.println("ich bin in Update");
        User user = userService.findUserById(userId);
        fahrt.setId(id);
        fahrt.setUser(user);
        fahrtService.saveFahrt(fahrt);
        return "redirect:/display_Fahrt";
    }
}
